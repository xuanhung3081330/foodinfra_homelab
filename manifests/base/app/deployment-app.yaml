apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  labels:
    deployment: app
spec:
  replicas: 2
  selector:
    matchLabels:
      pod: app
  template:
    metadata:
      labels:
        pod: app
    spec:
      initContainers:
        - name: init-db
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              DB_SERVICE_NAME=db-service
              if [[ -n ${ENV} ]]; then
                DB_SERVICE_NAME="${ENV}-${DB_SERVICE_NAME}"
              fi

              until nc -z -v -w30 ${DB_SERVICE_NAME} 5432; do
                echo "Waiting for PostgreSQL to be ready...";
                sleep 5;
              done
          env: # JUST FOR TESTING
            - name: ENV
              value: "" # DEFAULT is empty. A specific value should be specified in overlays/<Environment>
      containers:
      - name: app
        image: busybox:1.36 # JUST FOR TESTING
        command: # JUST FOR TESTING - Use for now only
          - sleep
          - "3600"
        ports:
          - containerPort: 8080
            name: http-app
        resources:
          requests:
            memory: "256Mi" # JUST FOR TESTING
            cpu: "125m" # JUST FOR TESTING
          limits:
            memory: "512Mi" # JUST FOR TESTING
            cpu: "250m" # JUST FOR TESTING
        securityContext:
          runAsUser: 0 # <CHANGE ME> - Currently running as root, shouldn't do this - JUST FOR TESTING (After finishing, removing the comment)
          runAsGroup: 0 # <CHANGE ME> - Currently running as root group, shouldn't do this - JUST FOR TESTING (After finishing, removing the comment)
          runAsNonRoot: false # Currently running as root user, shouldn't do this - JUST FOR TESTING (After finishing, removing the comment)
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        # TODO: Consider removing this field as I'm thinking that app pods in each environment can use different methods to get Secret and Config
        # envFrom:
        #   - configMapRef:
        #       name: db-config
        #   - secretRef:
        #       name: db-creds
