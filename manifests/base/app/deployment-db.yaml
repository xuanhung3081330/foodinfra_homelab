apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  labels:
    deployment: db
spec:
  replicas: 2
  selector:
    matchLabels:
      pod: db
  template:
    metadata:
      labels:
        pod: db
    spec:
      volumes:
        - name: db-pv-storage
          persistentVolumeClaim:
            claimName: db-pvc
      containers:
        - name: db
          image: postgres:17.5-alpine3.22
          #command: ["sh", "-c", "id postgres"] # For debugging purpose
          env:
            - name: POSTGRES_PASSWORD
              value: "mysecretpassword" # Testing only
            #- name: PGDATA
            #  value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
              name: postgres-port
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-pv-storage
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m" # Quarter of a core
            limits:
              memory: "1Gi"
              cpu: "1" # 1 full core
          securityContext:
            runAsUser: 70 # Default postgresql's user (postgres)
            runAsGroup: 70 # Default postgresql's group (postgres)
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "admin", "-d", "quanrestaurantdb", "-h", "db-service", "-p", "5432"]
            initialDelaySeconds: 5
            periodSeconds: 3
          startupProbe:
            exec:
              command: ["pg_isready", "-U", "admin", "-d", "quanrestaurantdb", "-h", "db-service", "-p", "5432"]
            failureThreshold: 30
            periodSeconds: 10

# TODO: Add initcontainers to change the permission of node's filesystem (/mnt/data/postgresql)
